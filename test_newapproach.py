import regex

baseabnf.update({"prose-val":'<(?:[\x20-\x3D] | [\x3F-\x7E])*>'})
baseabnf.update({"DIGIT":'[\x30-\x39]'})
baseabnf.update({"HEXDIG":'(?:['+baseabnf["DIGIT"] +'|[A-F])'})
baseabnf.update({"hex-val":'x(?:'+baseabnf["HEXDIG"]+')+'+'(?:(?:\.'+baseabnf["HEXDIG"]+'+)+|(?:-'+baseabnf["HEXDIG"]+'+))*'})
baseabnf.update({"dec-val":'d(?:'+baseabnf["DIGIT"]+')+'+'(?:(?:\.'+baseabnf["DIGIT"]+'+)+|(?:-'+baseabnf["DIGIT"]+'+))*'})
baseabnf.update({"BIT":'0|1'})
baseabnf.update({"bin-val":'b(?:'+baseabnf["BIT"]+')+'+'(?:(?:\.'+baseabnf["BIT"]+'+)+|(?:-'+baseabnf["BIT"]+'+))*'})
baseabnf.update({"num-val":'%(?:'+baseabnf["bin-val"]+'|'+baseabnf["hex-val"]+'|'+baseabnf["dec-val"]+')'})
baseabnf.update({"DQUOTE":'\x22'})
baseabnf.update({"char-val":baseabnf["DQUOTE"]+'(?:\x20-\x21|\x23-\x7E)*'+baseabnf["DQUOTE"]})
baseabnf.update({"SP":"\x20"})
baseabnf.update({"HTAB":"\x09"})
baseabnf.update({"WSP":'(?:' + baseabnf["SP"] + '|' + baseabnf["HTAB"] + ')'})
baseabnf.update({"repeat":'(?:' + baseabnf["DIGIT"]+"+" + "|" + "(?:" + baseabnf["DIGIT"] + "*" + "\*" + baseabnf["DIGIT"] + ')'})
baseabnf.update({"ALPHA":'[\x41-\x5A]|[\x61-\x7A]'})
baseabnf.update({"rulename":'(?: ' + baseabnf["ALPHA"] + '(:?' + baseabnf["ALPHA"] + '|' + baseabnf["DIGIT"] + "| - ))"})
baseabnf.update({"CR":"\x0D"})
baseabnf.update({"LF":"\x0A"})
baseabnf.update({"CRLF":baseabnf["CR"] + baseabnf["LF"]})
baseabnf.update({"VCHAR":'[\x21-\x7E]'})
baseabnf.update({"comment":'(?: ;' + '(?:' + baseabnf["WSP"] + '|' + baseabnf["VCHAR"] + ')*' + baseabnf['CRLF'] + ") "})
baseabnf.update({"c-nl":'(?:' + baseabnf["comment"] + '|' + baseabnf["CRLF"] + ")"})
baseabnf.update({"c-wsp":'?:' + baseabnf["WSP"] + '|' + '(:?' + baseabnf["c-nl"] + baseabnf["WSP"] + '))'})
baseabnf.update({"concatenation":'(?:' + baseabnf["repetition"] + '(:?' + baseabnf["c-wsp"] + '+' + baseabnf["repetition"] + ')*)'})
baseabnf.update({"alternation":'(?:' + baseabnf["concatenation"] + "(?:" + baseabnf["c-wsp"] + "* |" + baseabnf["c-wsp"] + "*" + baseabnf["concatenation"] + "))"})
baseabnf.update({"group":'(?: \(' + baseabnf["c-wsp"]+"*"+baseabnf["alternation"] + baseabnf["c-wsp"]+"*\))"})
baseabnf.update({"option":'(?: \[' + baseabnf["c-wsp"]+"*"+baseabnf["alternation"] + baseabnf["c-wsp"]+"*\])"})
baseabnf.update({"element":baseabnf["rulename"] + "|" +  baseabnf["group"] + "|" + baseabnf["option"] + "|" + sef.baseabnf["char-val"] + "|" + baseabnf["num-val"] + "|" + baseabnf["prose-val"]})
baseabnf.update({"repetition":baseabnf["repeat"] +"?" + baseabnf["element"]})
baseabnf.update({"elements":baseabnf["alternation"]+ "?" + baseabnf["c-wsp"]+"*"})
baseabnf.update({"defined-as":baseabnf["c-wsp"] + "* (?: = | =/)" + baseabnf["c-wsp"]})
baseabnf.update({"rulename":baseabnf["ALPHA"] + "(?: " + baseabnf["ALPHA"] + "|" + baseabnf["DIGIT"] + "-)*"})
baseabnf.update({"rule":baseabnf["rulename"] + baseabnf["defined-as"] + baseabnf["elements"] + baseabnf["c-nl"]})
baseabnf.update({"rulelist":"(?:" + baseabnf["rule"] + "| (?:" + baseabnf["c-wsp"] + "*" + baseabnf["c-nl"] + "))+"})
